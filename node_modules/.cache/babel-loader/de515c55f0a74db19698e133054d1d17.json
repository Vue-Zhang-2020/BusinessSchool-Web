{"remainingRequest":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\permission.js","dependencies":[{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\permission.js","mtime":1594204721535},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/\\u4E2A\\u4EBA\\u6210\\u957F\\u7ECF\\u5386/\\u9510\\u540D\\u79D1\\u6280/\\u4EA7\\u54C1\\u5F00\\u53D1/\\u5546\\u7BA1\\u9662/BusinessSchool-Web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/\\u4E2A\\u4EBA\\u6210\\u957F\\u7ECF\\u5386/\\u9510\\u540D\\u79D1\\u6280/\\u4EA7\\u54C1\\u5F00\\u53D1/\\u5546\\u7BA1\\u9662/BusinessSchool-Web/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _getPageTitle = _interopRequireDefault(require(\"@/utils/get-page-title\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _auth = require(\"@/utils/auth\");\n\n/* eslint-disable prefer-const */\n// progress bar\n// progress bar style\n// 验权\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login']; // no redirect whitelist\n\n_router.default.beforeEach(function (to, from, next) {\n  _nprogress.default.start();\n\n  if ((0, _auth.getToken)()) {\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n    } // else if (to.path === '/home' || to.path === '/teaching/manager' || to.path === '/student/data' || to.path === '/unit/coop'\n    //         || to.path === '/bus/business' || to.path === '/system/settings') {\n    //   console.log('商管院路由监听')\n    //   store.dispatch('GetTRole').then(() => { // 拉取用户信息\n    //     router.addRoutes(store.getters.routers)//添加后台路由表\n    //     next({ ...to, replace: true })\n    //   }).catch(e => {\n    //     store.dispatch('FedLogOut').then(() => {\n    //       Message.error('验证失败,请重新登录'+e.message)\n    //       next({ path: '/login' })\n    //     })\n    //   })\n    //   next()\n    // } \n    else {\n        if (_store.default.getters.name.length == 0) {\n          _store.default.dispatch('GetInfoss').then(function () {\n            // 拉取用户信息\n            _router.default.addRoutes(_store.default.getters.routers); //添加后台路由表\n\n\n            next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n              replace: true\n            }));\n          }).catch(function (e) {\n            _store.default.dispatch('FedLogOut').then(function () {\n              _elementUi.Message.error('验证失败,请重新登录' + e.message);\n\n              next({\n                path: '/login'\n              });\n            }); // router.addRoutes(store.getters.routers)//添加后台路由表\n            // next({ ...to, replace: true })\n\n          });\n        } else {\n          next();\n        }\n      }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      next();\n    } else {\n      next('/login');\n\n      _nprogress.default.done();\n    }\n  }\n});\n\n_router.default.afterEach(function () {\n  // finish progress bar\n  _nprogress.default.done();\n}); // router.beforeEach(async(to, from, next) => {\n//   // start progress bar\n//   NProgress.start()\n//   // set page title\n//   document.title = getPageTitle(to.meta.title)\n//   // determine whether the user has logged in\n//   const hasLogin = localStorage.getItem('hasLogin')\n//   if (hasLogin) {\n//     if (to.path === '/login') {\n//       // if is logged in, redirect to the home page\n//       next({ path: '/' })\n//       NProgress.done()\n//     } else {\n//       next()\n//       NProgress.done()\n//     }\n//     if (to.path === '/user/user') {\n//       let id = JSON.parse(localStorage.getItem('userInfo')).id\n//       console.log(id)\n//       if (id > 2) {\n//         next({ path: '/task' })\n//         window.alert('permission denied')\n//       }\n//     }\n//   } else {\n//     /* has no token*/\n//     if (whiteList.indexOf(to.path) !== -1) {\n//       // in the free login whitelist, go directly\n//       next()\n//     } else {\n//       // other pages that do not have permission to access are redirected to the login page.\n//       next(`/login?redirect=${to.path}`)\n//       NProgress.done()\n//     }\n//   }\n// })",null]}