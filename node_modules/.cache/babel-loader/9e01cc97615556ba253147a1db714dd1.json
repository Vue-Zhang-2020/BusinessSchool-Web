{"remainingRequest":"D:\\Vue\\后台模板\\vue-web-template\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue\\后台模板\\vue-web-template\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Vue\\后台模板\\vue-web-template\\src\\utils\\request.js","dependencies":[{"path":"D:\\Vue\\后台模板\\vue-web-template\\src\\utils\\request.js","mtime":1588748366510},{"path":"D:\\Vue\\后台模板\\vue-web-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue\\后台模板\\vue-web-template\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Vue\\后台模板\\vue-web-template\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/Vue/\\u540E\\u53F0\\u6A21\\u677F/vue-web-template/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\n// create an axios instance\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 50000 // request timeout\n\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  // do something before request is sent\n  config.headers.token = localStorage.getItem('token');\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\r\n * If you want to get http information such as headers or status\r\n * Please return  response => response\r\n */\n\n/**\r\n * Determine the request status by custom code\r\n * Here is just an example\r\n * You can also judge the status by HTTP Status Code\r\n */\nfunction (response) {\n  var res = response.data; // if the custom code is not 100, it is judged as an error.\n\n  if (res.code !== 200) {\n    (0, _elementUi.Message)({\n      message: res.msg || 'Error check your token or method',\n      type: 'error',\n      duration: 2 * 1000\n    });\n    return Promise.reject(new Error(res.msg || 'Error'));\n  } else {\n    return res;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  (0, _elementUi.Message)({\n    message: error.message,\n    type: 'error',\n    duration: 2 * 1000\n  });\n  return Promise.reject(error);\n});\nvar _default = service.request;\nexports.default = _default;",null]}