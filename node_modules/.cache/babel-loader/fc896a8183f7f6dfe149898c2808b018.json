{"remainingRequest":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\views\\business_port\\teaching\\course_manager\\course_center.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\views\\business_port\\teaching\\course_manager\\course_center.vue","mtime":1594450230373},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: '',\n  data: function data() {\n    return {\n      total: 400,\n      currentPage: 1,\n      pagesize: 8,\n      courseSearch: '',\n      // 课程搜索\n      courseStatus: '全部',\n      // 课程状态\n      insertOrModifyModal: false,\n      deleteDialog: false,\n      modifyDialog: false,\n      loading: false,\n      successDialog: false,\n      modifyTitle: 0,\n      // 0 添加 1 修改\n      formLabelWidth: '150px',\n      count: 3,\n      courseJsonData: [],\n      studentJsonData: [],\n      courseType: [],\n      courseForm: {\n        courseId: '',\n        courseName: '',\n        courseType: '',\n        courseImg: '',\n        courseDesc: '',\n        courseTime: '',\n        courseIntegral: ''\n      },\n      courseInsertForm: {\n        courseName: '',\n        courseSchool: '',\n        courseTime: '',\n        courseImg: '',\n        courseDesc: ''\n      },\n      rules: {\n        courseName: [{\n          required: true,\n          message: '请输入课程名称',\n          trigger: 'blur'\n        }],\n        courseType: [{\n          required: true,\n          message: '请选择课程类型',\n          trigger: 'change'\n        }],\n        courseIntegral: [{\n          required: true,\n          message: '请输入完成积分',\n          trigger: 'blur'\n        }]\n      },\n      insertRules: {\n        courseName: [{\n          required: true,\n          message: '请输入课程名称',\n          trigger: 'blur'\n        }],\n        courseSchool: [{\n          required: true,\n          message: '请选择学校',\n          trigger: 'change'\n        }],\n        courseTime: [{\n          required: true,\n          message: '请输入课程时长',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    insertOrModifyModal: function insertOrModifyModal(val) {\n      if (!val) {\n        this.requestCourseJsonData();\n      }\n    }\n  },\n  created: function created() {\n    this.requestCourseJsonData();\n  },\n  methods: {\n    handleSizeChange: function handleSizeChange(val) {\n      this.requestCourseJsonData();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.requestCourseJsonData();\n    },\n    // 搜索\n    searchCourse: function searchCourse() {\n      var _this = this;\n\n      this.$axios.post(this.$global.sApi + '/course', JSON.stringify({\n        'type': 5,\n        'coursename': this.courseSearch\n      })).then(function (res) {\n        _this.courseJsonData = res.data.data[0];\n      });\n    },\n    toList: function toList() {\n      this.successDialog = false;\n      this.insertOrModifyModal = false;\n    },\n    // 显示删除Dialog\n    showDeleteModal: function showDeleteModal() {\n      this.deleteDialog = true;\n    },\n    // 显示添加课程Dialog\n    showInserModal: function showInserModal(flag, obj) {\n      if (flag === 1) {\n        this.requestCouseTypeJsonData();\n        this.modifyDialog = true;\n        this.courseForm.courseId = obj.id;\n        this.courseForm.courseName = obj.coursename;\n        this.courseForm.courseType = obj.typename;\n        this.courseForm.courseImg = obj.header;\n        this.courseForm.courseDesc = obj.brief;\n        this.courseForm.courseIntegral = obj.points;\n        this.courseForm.courseTime = obj.length;\n      } else {\n        this.requestSchoolJsonData();\n        this.modifyTitle = flag;\n        this.insertOrModifyModal = true;\n      }\n    },\n    statusChange: function statusChange(e) {\n      if (e === '全部') {\n        this.requestCourseJsonData();\n      } else {\n        switch (e) {\n          case '进行中':\n            this.requestCourseStatusJsonData(2);\n            break;\n\n          case '未开始':\n            this.requestCourseStatusJsonData(1);\n            break;\n\n          case '已结束':\n            this.requestCourseStatusJsonData(3);\n            break;\n        }\n      }\n    },\n    // 获取学校信息\n    requestSchoolJsonData: function requestSchoolJsonData() {\n      var _this2 = this;\n\n      this.$axios.post(this.$global.sApi + '/addscuser', JSON.stringify({\n        'type': 3,\n        'current_page': 1,\n        'perpage': 9999\n      })).then(function (res) {\n        _this2.studentJsonData = res.data.data.data;\n        console.log(_this2.studentJsonData);\n      });\n    },\n    // 获取课程类型\n    requestCouseTypeJsonData: function requestCouseTypeJsonData() {\n      var _this3 = this;\n\n      this.$axios.post(this.$global.sApi + '/addtype', JSON.stringify({\n        'type': 4\n      })).then(function (res) {\n        _this3.courseType = res.data.data[0];\n      });\n    },\n    // 获取课程列表\n    requestCourseJsonData: function requestCourseJsonData() {\n      var _this4 = this;\n\n      this.$axios.post(this.$global.sApi + '/course', JSON.stringify({\n        'type': 4,\n        'current_page': this.currentPage,\n        'perpage': this.pagesize\n      })).then(function (res) {\n        _this4.courseJsonData = res.data.data.data;\n        _this4.total = res.data.data.total;\n      });\n    },\n    // 获取课程状态列表\n    requestCourseStatusJsonData: function requestCourseStatusJsonData(status) {\n      var _this5 = this;\n\n      this.$axios.post(this.$global.sApi + '/course', JSON.stringify({\n        'type': 6,\n        'status': status\n      })).then(function (res) {\n        _this5.courseJsonData = res.data.data.data;\n        _this5.total = res.data.data.total;\n      });\n    },\n    // 确认编辑\n    modifyCourse: function modifyCourse() {\n      this.modifyTitle = 1;\n      this.modifyDialog = false;\n      this.insertOrModifyModal = true;\n    },\n    // 前端校验文件上传是否符合条件\n    file_info_check: function file_info_check(file) {\n      var ret = '';\n\n      if (file === undefined) {\n        ret = '';\n      } // eslint-disable-next-line camelcase\n\n\n      var max_file_size = 2 * 1024 * 1024; // eslint-disable-next-line camelcase\n\n      if (file.size > max_file_size) {\n        ret = '文件不能大于2Mb';\n      }\n\n      var typeJpg = '.jpg';\n      var typeJpeg = '.jpeg';\n      var typePng = '.png';\n\n      if (file.name.indexOf(typeJpg) === -1) {\n        ret = '文件格式要求是.jpg/.jpeg/.png';\n      } else {\n        ret = 'success';\n        return ret;\n      }\n\n      if (file.name.indexOf(typeJpeg) === -1) {\n        ret = '文件格式要求是.jpg/.jpeg/.png';\n      } else {\n        ret = 'success';\n        return ret;\n      }\n\n      if (file.name.indexOf(typePng) === -1) {\n        ret = '文件格式要求是.jpg/.jpeg/.png';\n      } else {\n        ret = 'success';\n        return ret;\n      }\n\n      return ret;\n    },\n    uploadImg: function uploadImg(fileObj) {\n      var _this6 = this;\n\n      this.loading = true;\n      var fileStatus = this.file_info_check(fileObj.file);\n\n      if (fileStatus === 'success') {\n        var formData = new FormData();\n        formData.append('file', fileObj.file);\n        this.$axios.post('/upschead', formData, {\n          headers: {\n            'Content-type': 'multipart/form-data'\n          }\n        }).then(function (res) {\n          // this.registerForm.imageUrl = res\n          _this6.$message({\n            message: '提交成功',\n            type: 'success'\n          });\n\n          _this6.courseForm.courseImg = res.data.path;\n          _this6.loading = false;\n        });\n      } else {\n        this.$message({\n          message: fileStatus,\n          type: 'error'\n        });\n      }\n    },\n    uploadImgInsert: function uploadImgInsert(fileObj) {\n      var _this7 = this;\n\n      this.loading = true;\n      var fileStatus = this.file_info_check(fileObj.file);\n\n      if (fileStatus === 'success') {\n        var formData = new FormData();\n        formData.append('file', fileObj.file);\n        this.$axios.post('/upschead', formData, {\n          headers: {\n            'Content-type': 'multipart/form-data'\n          }\n        }).then(function (res) {\n          // this.registerForm.imageUrl = res\n          _this7.$message({\n            message: '提交成功',\n            type: 'success'\n          });\n\n          _this7.courseInsertForm.courseImg = res.data.path;\n          _this7.loading = false;\n        });\n      } else {\n        this.$message({\n          message: fileStatus,\n          type: 'error'\n        });\n      }\n    },\n    submitModify: function submitModify(formName) {\n      var _this8 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this8.modifyCourseApi();\n        }\n      });\n    },\n    submitInsert: function submitInsert(formName) {\n      var _this9 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this9.insertCourseApi();\n        }\n      });\n    },\n    // 添加课程\n    insertCourseApi: function insertCourseApi() {\n      var _this10 = this;\n\n      this.$axios.post(this.$global.sApi + '/course', JSON.stringify({\n        'type': 1,\n        'coursename': this.courseInsertForm.courseName,\n        'scinfoid': parseInt(this.courseInsertForm.courseSchool),\n        'length': parseInt(this.courseInsertForm.courseTime),\n        'header': this.courseInsertForm.courseImg,\n        'brief': this.courseInsertForm.courseDesc,\n        'typename': '暂无'\n      })).then(function (res) {\n        _this10.successDialog = true;\n\n        _this10.countDown();\n      });\n    },\n    // 编辑课程\n    modifyCourseApi: function modifyCourseApi() {\n      var _this11 = this;\n\n      this.$axios.post(this.$global.sApi + '/course', JSON.stringify({\n        'type': 2,\n        'coursename': this.courseForm.courseName,\n        'typename': parseInt(this.courseForm.courseType),\n        'points': parseInt(this.courseForm.courseIntegral),\n        'header': this.courseForm.courseImg == '' ? '暂无' : this.courseForm.courseImg,\n        'brief': this.courseForm.courseDesc == '' ? '暂无' : this.courseForm.courseDesc,\n        'id': this.courseForm.courseId\n      })).then(function (res) {\n        _this11.successDialog = true;\n\n        _this11.countDown();\n      });\n    },\n    countDown: function countDown() {\n      var _this12 = this;\n\n      var TIME_COUNT = 3;\n\n      if (!this.timer) {\n        this.count = TIME_COUNT;\n        this.timer = setInterval(function () {\n          if (_this12.count > 0 && _this12.count <= TIME_COUNT) {\n            _this12.count--;\n          } else {\n            clearInterval(_this12.timer);\n            _this12.timer = null;\n            _this12.insertOrModifyModal = false;\n            _this12.successDialog = false;\n          }\n        }, 1000);\n      }\n    }\n  }\n};\nexports.default = _default;",null]}