{"remainingRequest":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\utils\\request.js","dependencies":[{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\src\\utils\\request.js","mtime":1594176050189},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\个人成长经历\\锐名科技\\产品开发\\商管院\\BusinessSchool-Web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/\\u4E2A\\u4EBA\\u6210\\u957F\\u7ECF\\u5386/\\u9510\\u540D\\u79D1\\u6280/\\u4EA7\\u54C1\\u5F00\\u53D1/\\u5546\\u7BA1\\u9662/BusinessSchool-Web/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _auth = require(\"@/utils/auth\");\n\n// 创建axios实例\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // api的base_url\n  timeout: 15000 // 请求超时时间\n\n}); // request拦截器\n\n\nservice.interceptors.request.use(function (config) {\n  if (_store.default.getters.token) {\n    config.headers['Authorization'] = (0, _auth.getToken)(); // 让每个请求携带自定义token 请根据实际情况自行修改\n\n    config.headers.post['Content-Type'] = 'application/json;charset=UTF-8';\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\r\n   * code为非401权限不足，非20001 表示登录错误,50000以上全是错误代码\r\n   */\n  var res = response.data;\n\n  if (response.status === 401 || res.code === 20002 || res.code === 401 || res.code > 50000) {\n    (0, _elementUi.Message)({\n      message: res.message,\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",null]}